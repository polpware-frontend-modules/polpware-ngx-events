{"version":3,"file":"polpware-ngx-events.mjs","sources":["../../../../projects/polpware/ngx-events/src/lib/services/global-events.service.ts","../../../../projects/polpware/ngx-events/src/lib/ngx-events.module.ts","../../../../projects/polpware/ngx-events/src/public_api.ts","../../../../projects/polpware/ngx-events/src/polpware-ngx-events.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface FunctionSignature {\n    name: string;\n    args: any[];\n    callback?: () => void;\n}\n\n@Injectable()\nexport class GlobalEventsService {\n    private _listeners: { [key: string]: any };\n    private _subject: Subject<FunctionSignature>;\n\n    constructor() {\n        this._listeners = {};\n        this._subject = new Subject();\n\n        this._subject.asObservable().subscribe(\n            (next) => {\n                const name = next.name;\n                const args = next.args;\n                const callback = next.callback;\n                if (this._listeners[name]) {\n                    for (const listener of this._listeners[name]) {\n                        listener(...args);\n                    }\n\n                    if (callback) {\n                        callback();\n                    }\n                }\n            },\n            (error) => {\n            }\n        );\n    }\n\n    on(name: string, listener) {\n        if (!this._listeners[name]) {\n            this._listeners[name] = [];\n        }\n        this._listeners[name].push(listener);\n    }\n\n    off(name: string, listener?) {\n        if (!this._listeners[name]) {\n            return;\n        }\n        if (!listener) {\n            delete this._listeners[name];\n            return;\n        }\n\n        const callbacks = this._listeners[name];\n        let anyIndex = -1;\n        let index;\n        for (index = 0; index < callbacks.length; index++) {\n            if (callbacks[index] === listener) {\n                anyIndex = index;\n                break;\n            }\n        }\n        if (anyIndex !== -1) {\n            callbacks.splice(anyIndex, 1);\n        }\n    }\n\n    broadcast(name: string, args: any[] = [], callback: () => void = null) {\n        this._subject.next({\n            name: name,\n            args: args,\n            callback: callback\n        });\n    }\n}\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GlobalEventsService } from './services/global-events.service';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule\n    ]\n})\nexport class PolpNgxEventsModule {\n    constructor(@Optional() @SkipSelf() parentModule: PolpNgxEventsModule) {\n        if (parentModule) {\n            throw new Error(\n                'PolpNgxEventsModule is already loaded and please import it in the AppModule only.');\n        }\n    }\n\n    static forRoot(): ModuleWithProviders<PolpNgxEventsModule> {\n        return {\n            ngModule: PolpNgxEventsModule,\n            providers: [GlobalEventsService]\n        };\n    }\n}\n","/*\n * Public API Surface of ngx-events\n */\n\nexport * from './lib/services/global-events.service';\nexport * from './lib/ngx-events.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}